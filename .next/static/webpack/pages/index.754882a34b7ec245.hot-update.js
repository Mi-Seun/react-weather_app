"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/UnitSwitch.js":
/*!**********************************!*\
  !*** ./components/UnitSwitch.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnitSwitch: () => (/* binding */ UnitSwitch)\n/* harmony export */ });\n/* harmony import */ var _UnitSwitch_module_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UnitSwitch.module.css */ \"./components/UnitSwitch.module.css\");\n/* harmony import */ var _UnitSwitch_module_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_UnitSwitch_module_css__WEBPACK_IMPORTED_MODULE_0__);\n// import styles from \"./UnitSwitch.module.css\";\n// export const UnitSwitch = ({ onClick, unitSystem }) => {\n//   return (\n//     <div className={styles.wrapper}>\n//       <p\n//         className={`${styles.switch} ${\n//           unitSystem === \"metric\" ? styles.active : styles.inactive\n//         }`}\n//         onClick={onClick}\n//       >\n//         Metric System\n//       </p>\n//       <p\n//         className={`${styles.switch} ${\n//           unitSystem === \"metric\" ? styles.inactive : styles.active\n//         }`}\n//         onClick={onClick}\n//       >\n//         Imperial System\n//       </p>\n//     </div>\n//   );\n// };\n\nconst UnitSwitch = (param)=>{\n    let { onClick, unitSystem } = param;\n    return(//<div className={styles.wrapper}>\n    {});\n};\n_c = UnitSwitch;\nvar _c;\n$RefreshReg$(_c, \"UnitSwitch\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1VuaXRTd2l0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQWdEO0FBRWhELDJEQUEyRDtBQUMzRCxhQUFhO0FBQ2IsdUNBQXVDO0FBQ3ZDLFdBQVc7QUFDWCwwQ0FBMEM7QUFDMUMsc0VBQXNFO0FBQ3RFLGNBQWM7QUFDZCw0QkFBNEI7QUFDNUIsVUFBVTtBQUNWLHdCQUF3QjtBQUN4QixhQUFhO0FBQ2IsV0FBVztBQUNYLDBDQUEwQztBQUMxQyxzRUFBc0U7QUFDdEUsY0FBYztBQUNkLDRCQUE0QjtBQUM1QixVQUFVO0FBQ1YsMEJBQTBCO0FBQzFCLGFBQWE7QUFDYixhQUFhO0FBQ2IsT0FBTztBQUNQLEtBQUs7QUFFd0M7QUFFdEMsTUFBTUMsYUFBYTtRQUFDLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFO0lBQ2hELE9BQ0Usa0NBQWtDO0lBQ2hDLENBZU87QUFHYixFQUFFO0tBckJXRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxNaS1TdW5cXERlc2t0b3BcXHdlYXRoZXItYXBwLXRlc3RcXGNvbXBvbmVudHNcXFVuaXRTd2l0Y2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9Vbml0U3dpdGNoLm1vZHVsZS5jc3NcIjtcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBVbml0U3dpdGNoID0gKHsgb25DbGljaywgdW5pdFN5c3RlbSB9KSA9PiB7XHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMud3JhcHBlcn0+XHJcbi8vICAgICAgIDxwXHJcbi8vICAgICAgICAgY2xhc3NOYW1lPXtgJHtzdHlsZXMuc3dpdGNofSAke1xyXG4vLyAgICAgICAgICAgdW5pdFN5c3RlbSA9PT0gXCJtZXRyaWNcIiA/IHN0eWxlcy5hY3RpdmUgOiBzdHlsZXMuaW5hY3RpdmVcclxuLy8gICAgICAgICB9YH1cclxuLy8gICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxyXG4vLyAgICAgICA+XHJcbi8vICAgICAgICAgTWV0cmljIFN5c3RlbVxyXG4vLyAgICAgICA8L3A+XHJcbi8vICAgICAgIDxwXHJcbi8vICAgICAgICAgY2xhc3NOYW1lPXtgJHtzdHlsZXMuc3dpdGNofSAke1xyXG4vLyAgICAgICAgICAgdW5pdFN5c3RlbSA9PT0gXCJtZXRyaWNcIiA/IHN0eWxlcy5pbmFjdGl2ZSA6IHN0eWxlcy5hY3RpdmVcclxuLy8gICAgICAgICB9YH1cclxuLy8gICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxyXG4vLyAgICAgICA+XHJcbi8vICAgICAgICAgSW1wZXJpYWwgU3lzdGVtXHJcbi8vICAgICAgIDwvcD5cclxuLy8gICAgIDwvZGl2PlxyXG4vLyAgICk7XHJcbi8vIH07XHJcblxyXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL1VuaXRTd2l0Y2gubW9kdWxlLmNzc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRTd2l0Y2ggPSAoeyBvbkNsaWNrLCB1bml0U3lzdGVtIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgLy88ZGl2IGNsYXNzTmFtZT17c3R5bGVzLndyYXBwZXJ9PlxyXG4gICAgICB7LyogPHBcclxuICAgICAgICBjbGFzc05hbWU9e2Ake3N0eWxlcy5zd2l0Y2h9ICR7XHJcbiAgICAgICAgICB1bml0U3lzdGVtID09PSBcIm1ldHJpY1wiID8gc3R5bGVzLmFjdGl2ZSA6IHN0eWxlcy5pbmFjdGl2ZVxyXG4gICAgICAgIH1gfVxyXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XHJcbiAgICAgID5cclxuICAgICAgICBNZXRyaWMgU3lzdGVtXHJcbiAgICAgIDwvcD5cclxuICAgICAgPHBcclxuICAgICAgICBjbGFzc05hbWU9e2Ake3N0eWxlcy5zd2l0Y2h9ICR7XHJcbiAgICAgICAgICB1bml0U3lzdGVtID09PSBcIm1ldHJpY1wiID8gc3R5bGVzLmluYWN0aXZlIDogc3R5bGVzLmFjdGl2ZVxyXG4gICAgICAgIH1gfVxyXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XHJcbiAgICAgID5cclxuICAgICAgICBJbXBlcmlhbCBTeXN0ZW1cclxuICAgICAgPC9wPiAqL31cclxuICAgIC8vPC9kaXY+XHJcbiAgKTtcclxufTtcclxuIl0sIm5hbWVzIjpbInN0eWxlcyIsIlVuaXRTd2l0Y2giLCJvbkNsaWNrIiwidW5pdFN5c3RlbSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/UnitSwitch.js\n"));

/***/ })

});